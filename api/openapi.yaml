openapi: 3.0.0
info:
  version: 1.0.0
  title: ECMA's Events
  description: >-
    API da aplicação gerida pela companhia de marketing ECMA para a gestão da
    organização de eventos com a colaboração das suas companhias parceiras.
servers:
  - url: 'http://localhost:8080/'
tags:
  - name: Users
    description: Todas as operações sobre utilizadores no sistema
  - name: Partner Company
    description: Operações sobre as companhias parceiras
  - name: Employee
    description: Operações sobre os empregados das companhias parceiras
  - name: Event Proposal
    description: Todas as operações sobre as propostas de eventos
  - name: Event Proposal Review
    description: Operações sobre as revisões de propostas de eventos
  - name: Event Proposal Comment
    description: Operações sobre comentários a propostas de eventos
  - name: Event Proposal Comment Reply
    description: Operações sobre respostas a comentários de propostas de eventos
paths:
  /users:
    get:
      tags:
        - Users
      description: Obter todos os utilizadores do sistema
      operationId: getUsers
      parameters:
        - name: criteria
          in: query
          description: Filtrar os utilizadores que satisfazem o critério
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Lista com a informação sobre os utilizadores
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Users
      description: Adicionar um utilizador ao sistema
      operationId: addUser
      requestBody:
        description: Todos os necessários dados do utilizador
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Utilizador adicionado com sucesso
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/users/{id}':
    get:
      tags:
        - Users
      description: 'Obter o utilizador identificado pelo {id}'
      operationId: getUser
      parameters:
        - name: id
          in: path
          description: Identificador do utilizador a obter
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Informação do utilizador
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Utilizador não encontrado
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - Users
      description: 'Atualizar o utilizador identificado pelo {id}'
      operationId: updateUser
      parameters:
        - name: id
          in: path
          description: Identificador do utilizador a remover
          required: true
          schema:
            type: integer
            format: int64
        - name: user
          in: query
          description: Objeto utilizador que é atualizado
          required: true
          schema:
            $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Utilizador atualizado
        '400':
          description: Id especificado inválido
        '404':
          description: Utilizador não encontrado
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - Users
      description: 'Remover do sistema o utilizador identificado pelo {id}'
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          description: Identificador do utilizador a remover
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Utilizador removido
        '404':
          description: Utilizador não encontrado
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /partners:
    get:
      tags:
        - Partner Company
      description: Obter todas as empresas parceiras
      operationId: getPartnerCompanies
      parameters:
        - name: criteria
          in: query
          description: Filtrar as empresas que satisfazem o critério
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Lista com a informação sobre as empresas parceiras
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PartnerCompany'
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Partner Company
      description: Adicionar uma companhia parceira ao sistema
      operationId: addPartnerCompany
      requestBody:
        description: Todos os necessários dados da empresa
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerCompany'
      responses:
        '200':
          description: Empresa adicionada com sucesso
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/partners/{id}':
    get:
      tags:
        - Partner Company
      description: 'Obter a empresa identificada pelo {id}'
      operationId: getPartnerCompany
      parameters:
        - name: id
          in: path
          description: Identificador da empresa a obter
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Informação da empresa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerCompany'
        '404':
          description: Empresa não encontrada
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - Partner Company
      description: 'Atualizar a empresa identificada pelo {id}'
      operationId: updatePartnerCompany
      parameters:
        - name: id
          in: path
          description: Identificador da empresa a remover
          required: true
          schema:
            type: integer
            format: int64
        - name: user
          in: query
          description: Objeto da empresa que é atualizada
          required: true
          schema:
            $ref: '#/components/schemas/PartnerCompany'
      responses:
        '200':
          description: Empresa atualizada
        '400':
          description: Id especificado inválido
        '404':
          description: Empresa não encontrada
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - Partner Company
      description: 'Remover do sistema a empresa identificada pelo {id}'
      operationId: deletePartnerCompany
      parameters:
        - name: id
          in: path
          description: Identificador da empresa a remover
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Empresa removida
        '404':
          description: Empresa não encontrada
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/partners/{id}/employees':
    get:
      tags:
        - Partner Company
      description: 'Obter todos os empregados da empresa parceira identificada pelo {id}'
      operationId: getCompanyEmployees
      parameters:
        - name: id
          in: path
          description: Identificador da empresa parceira
          required: true
          schema:
            type: integer
            format: int64
        - name: criteria
          in: query
          description: Filtrar os empregados que satisfazem o critério
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Lista com as informações dos empregados da empresa em questão
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
        '404':
          description: Empresa não encontrada
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Partner Company
      description: 'Adicionar um empregado à companhia parceira identificada pelo {id}'
      operationId: addEmployee
      parameters:
        - name: id
          in: path
          description: Identificador da empresa parceira
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Todos os necessários dados do empregado
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
      responses:
        '200':
          description: Empregado adicionado com sucesso
        '404':
          description: Empresa não encontrada
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /employee:
    get:
      tags:
        - Employee
      description: Obter todos os empregados de empresas parceiras
      operationId: getEmployees
      parameters:
        - name: criteria
          in: query
          description: Filtrar os empregados que satisfazem o critério
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Lista com a informação sobre os empregados de empresas parceiras
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/employee/{id}':
    get:
      tags:
        - Employee
      description: 'Obter o empregado identificado pelo {id}'
      operationId: getEmployee
      parameters:
        - name: id
          in: path
          description: Identificador do empregado a obter
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Informação do empregado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
        '404':
          description: Empregado não encontrado no sistema
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - Employee
      description: 'Atualizar o empregado identificado pelo {id}'
      operationId: updateEmployee
      parameters:
        - name: id
          in: path
          description: Identificador do empregado a remover
          required: true
          schema:
            type: integer
            format: int64
        - name: user
          in: query
          description: Objeto do empregado que é atualizado
          required: true
          schema:
            $ref: '#/components/schemas/Employee'
      responses:
        '200':
          description: Informações do empregado atualizadas
        '400':
          description: Id especificado inválido
        '404':
          description: Empregado não encontrado
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - Employee
      description: 'Remover do sistema o empregado identificado pelo {id}'
      operationId: deleteEmployee
      parameters:
        - name: id
          in: path
          description: Identificador do empregado a remover
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Empregado removido
        '404':
          description: Empregado não encontrado
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
  /proposals:
    get:
      tags:
        - Event Proposal
      description: Obter todas as propostas de eventos do sistema
      operationId: getEventProposals
      parameters:
        - name: criteria
          in: query
          description: Filtrar as propostas de eventos que satisfazem o critério
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Lista com a informação sobre as propostas de eventos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventProposal'
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Event Proposal
      description: Adicionar uma proposta de evento ao sistema
      operationId: addEventProposal
      requestBody:
        description: Todos os necessários dados da proposta de evento
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventProposal'
      responses:
        '200':
          description: Proposta de evento adicionada com sucesso
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/proposals/{id}':
    get:
      tags:
        - Event Proposal
      description: 'Obter a proposta de evento identificado pelo {id}'
      operationId: getEventProposal
      parameters:
        - name: id
          in: path
          description: Identificador da proposta de evento a obter
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Informação da proposta de evento
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventProposal'
        '404':
          description: Proposta de evento não encontrada
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - Event Proposal
      description: 'Atualizar a proposta de evento identificada pelo {id}'
      operationId: updateEventProposal
      parameters:
        - name: id
          in: path
          description: Identificador da proposta de evento a remover
          required: true
          schema:
            type: integer
            format: int64
        - name: proposal
          in: query
          description: Objeto proposta de evento que é atualizado
          required: true
          schema:
            $ref: '#/components/schemas/EventProposal'
      responses:
        '200':
          description: Proposta de evento atualizada
        '400':
          description: Id especificado inválido
        '404':
          description: Proposta de evento não encontrada
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - Event Proposal
      description: 'Remover do sistema a proposta de evento identificada pelo {id}'
      operationId: deleteEventProposal
      parameters:
        - name: id
          in: path
          description: Identificador da proposta de evento a remover
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Proposta de evento removida
        '404':
          description: Proposta de evento não encontrada
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/proposals/{id}/reviews':
    get:
      tags:
        - Event Proposal
      description: 'Obter todas as reviews da proposta de evento identificada pelo {id}'
      operationId: getEventProposalReviews
      parameters:
        - name: id
          in: path
          description: Identificador da proposta de evento
          required: true
          schema:
            type: integer
            format: int64
        - name: criteria
          in: query
          description: Filtrar as reviews que satisfazem o critério
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Lista com as reviews da proposta de evento em questão
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventProposalReview'
        '404':
          description: Proposta de evento não encontrada
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Event Proposal
      description: 'Adicionar uma review à proposta de evento identificada pelo {id}'
      operationId: addEventProposalReview
      parameters:
        - name: id
          in: path
          description: Identificador da proposta de evento
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Todos os necessários dados da review
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventProposalReview'
      responses:
        '200':
          description: Review adicionada com sucesso
        '404':
          description: Proposta de evento não encontrada
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /reviews:
    get:
      tags:
        - Event Proposal Review
      description: Obter todas as reviews do sistema
      operationId: getEventProposalsReviews
      parameters:
        - name: criteria
          in: query
          description: Filtrar as reviews que satisfazem o critério
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Lista com a informação sobre as reviews de propostas de eventos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventProposalReview'
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/reviews/{id}':
    get:
      tags:
        - Event Proposal Review
      description: 'Obter review identificada pelo {id}'
      operationId: getEventProposalReview
      parameters:
        - name: id
          in: path
          description: Identificador da review a obter
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Informação da review
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventProposalReview'
        '404':
          description: Review não encontrada
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - Event Proposal Review
      description: 'Atualizar review identificada pelo {id}'
      operationId: updateEventProposalReview
      parameters:
        - name: id
          in: path
          description: Identificador da review a remover
          required: true
          schema:
            type: integer
            format: int64
        - name: proposal
          in: query
          description: Objeto review que é atualizado
          required: true
          schema:
            $ref: '#/components/schemas/EventProposalReview'
      responses:
        '200':
          description: Review atualizada
        '400':
          description: Id especificado inválido
        '404':
          description: Review não encontrada
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - Event Proposal Review
      description: 'Remover do sistema a review identificada pelo {id}'
      operationId: deleteEventProposalReview
      parameters:
        - name: id
          in: path
          description: Identificador da review a remover
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Review removida
        '404':
          description: Review não encontrada
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    User:
      required:
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          example: user1
    PartnerCompany:
      required:
        - name
        - address
        - email
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        name:
          type: string
          example: ECMA
        address:
          type: string
          example: Long Street
        email:
          type: string
          example: info@ecma.com
        employees:
          type: array
          items:
            $ref: '#/components/schemas/Employee'
          readOnly: true
    Employee:
      required:
        - name
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        name:
          type: string
          example: John
    EventProposal: null
    EventProposalReview: null
    EvenProposalComment: null
    EventProposalCommentReply: null
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
