openapi: 3.0.0
info:
  version: 1.0.0
  title: ECMA Events
  description: >-
    API da aplicação gerida pela companhia de marketing ECMA para a gestão da
    organização de eventos com a colaboração das suas companhias parceiras.
servers:
  - url: 'http://localhost:8080/'
tags:
  - name: Users
    description: Todas as operações sobre utilizadores no sistema
  - name: Partner Company
    description: Operações sobre as companhias parceiras
  - name: Event Proposal
    description: Todas as operações sobre as propostas de eventos
paths:
  /users:
    get:
      tags:
        - Users
      description: Obter todos os utilizadores do sistema.
      operationId: getUsers
      parameters:
        - name: criteria
          in: query
          description: Filtrar os utilizadores que satisfazem o critério.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Lista com a informação sobre os utilizadores
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Users
      description: Adicionar um utilizador ao sistema
      operationId: addUser
      requestBody:
        description: Todos os necessários dados do utilizador
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Utilizador adicionado com sucesso
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/users/{id}':
    get:
      tags:
        - Users
      description: 'Obter o utilizador identificado pelo {id}.'
      operationId: getUser
      parameters:
        - name: id
          in: path
          description: Identificador do utilizador a obter
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Informação do utilizador
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Utilizador não encontrado
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - Users
      description: 'Atualizar o utilizador identificado pelo {id}.'
      operationId: updateUser
      parameters:
        - name: id
          in: path
          description: Identificador do utilizador a remover
          required: true
          schema:
            type: integer
            format: int64
        - name: user
          in: query
          description: Objeto utilizador que é atualizado
          required: true
          schema:
            $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Utilizador atualizado
        '400':
          description: Id especificado inválido
        '404':
          description: Utilizador não encontrado
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - Users
      description: 'Remover do sistema o utilizador identificado pelo {id}.'
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          description: Identificador do utilizador a remover
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Utilizador removido
        '404':
          description: Utilizador não encontrado
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/users/{id}/proposals':
    get:
      tags:
        - Users
      description: 'Obter as propostas do utilizador identificado pelo {id}.'
      operationId: getProposals
      parameters:
        - name: id
          in: path
          description: Identificador do utilizador
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Propostas do utilizador
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Proposal'
        '404':
          description: Utilizador não encontrado
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/users/{uid}/proposals/{pid}':
    get:
      tags:
        - Users
      description: 'Obter as propostas do utilizador identificado pelo {id}.'
      operationId: getProposal
      parameters:
        - name: uid
          in: path
          description: Identificador do utilizador
          required: true
          schema:
            type: integer
            format: int64
        - name: pid
          in: path
          description: Identificador da proposta
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Proposta do utilizador
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Proposal'
        '404':
          description: Utilizador ou proposta não encontrados
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/users/{id}/biddings':
    get:
      tags:
        - Users
      description: 'Obter as propostas nas quais o utilizador identificado pelo {id} tem interesse em ser reviewer.'
      operationId: getBiddings
      parameters:
        - name: id
          in: path
          description: Identificador do utilizador
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Propostas nas quais o utilizador tem interesse em ser reviewer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Proposal'
        '404':
          description: Utilizador não encontrado
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/users/{uid}/biddings/{pid}':
    get:
      tags:
        - Users
      description: 'Obter a propostas {pid}, na qual o utilizador identificado pelo {id} tem interesse em ser reviewer.'
      operationId: getBidding
      parameters:
        - name: uid
          in: path
          description: Identificador do utilizador
          required: true
          schema:
            type: integer
            format: int64
        - name: pid
          in: path
          description: Identificador da proposta
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Propostas do utilizador
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Proposal'
        '404':
          description: Utilizador ou proposta não encontrados
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /companies:
    get:
      tags:
        - Partner Company
      description: Obter todas as empresas parceiras
      operationId: getCompanies
      parameters:
        - name: criteria
          in: query
          description: Filtrar as empresas que satisfazem o critério
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Lista com a informação sobre as empresas parceiras
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Company'
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Partner Company
      description: Adicionar uma companhia parceira ao sistema
      operationId: addCompany
      requestBody:
        description: Todos os necessários dados da empresa
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
      responses:
        '200':
          description: Empresa adicionada com sucesso
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/companies/{id}':
    get:
      tags:
        - Partner Company
      description: 'Obter a empresa identificada pelo {id}'
      operationId: getCompany
      parameters:
        - name: id
          in: path
          description: Identificador da empresa a obter
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Informação da empresa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
        '404':
          description: Empresa não encontrada
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - Partner Company
      description: 'Atualizar a empresa identificada pelo {id}'
      operationId: updateCompany
      parameters:
        - name: id
          in: path
          description: Identificador da empresa a remover
          required: true
          schema:
            type: integer
            format: int64
        - name: user
          in: query
          description: Objeto da empresa que é atualizada
          required: true
          schema:
            $ref: '#/components/schemas/Company'
      responses:
        '200':
          description: Empresa atualizada
        '400':
          description: Id especificado inválido
        '404':
          description: Empresa não encontrada
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - Partner Company
      description: 'Remover do sistema a empresa identificada pelo {id}'
      operationId: deleteCompany
      parameters:
        - name: id
          in: path
          description: Identificador da empresa a remover
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Empresa removida
        '404':
          description: Empresa não encontrada
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/companies/{cid}/employee/{eid}':
    get:
      tags:
        - Partner Company
      description: 'Obter o empregado identificado pelo {eid} na empresa {cid}'
      operationId: getEmployee
      parameters:
        - name: cid
          in: path
          description: Identificador da empresa
          required: true
          schema:
            type: integer
            format: int64
        - name: eid
          in: path
          description: Identificador do empregado a obter
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Informação do empregado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
        '404':
          description: Empregado ou empresa não encontrados no sistema
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - Partner Company
      description: 'Atualizar o empregado identificado pelo {eid} na empresa {cid}'
      operationId: updateEmployee
      parameters:
        - name: cid
          in: path
          description: Identificador da empresa
          required: true
          schema:
            type: integer
            format: int64
        - name: eid
          in: path
          description: Identificador do empregado a remover
          required: true
          schema:
            type: integer
            format: int64
        - name: user
          in: query
          description: Objeto do empregado que é atualizado
          required: true
          schema:
            $ref: '#/components/schemas/Employee'
      responses:
        '200':
          description: Informações do empregado atualizadas
        '400':
          description: Id especificado da empresa ou empregado inválidos
        '404':
          description: Empregado ou empresa não encontrados no sistema
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - Partner Company
      description: 'Remover do sistema o empregado identificado pelo {eid} na empresa {cid}'
      operationId: deleteEmployee
      parameters:
        - name: cid
          in: path
          description: Identificador da empresa
          required: true
          schema:
            type: integer
            format: int64
        - name: eid
          in: path
          description: Identificador do empregado a remover
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Empregado removido
        '404':
          description: Empresa ou empregado não encontrados
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
  '/companies/{id}/employees':
    get:
      tags:
        - Partner Company
      description: 'Obter todos os empregados da empresa parceira identificada pelo {id}'
      operationId: getEmployees
      parameters:
        - name: id
          in: path
          description: Identificador da empresa parceira
          required: true
          schema:
            type: integer
            format: int64
        - name: criteria
          in: query
          description: Filtrar os empregados que satisfazem o critério
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Lista com as informações dos empregados da empresa em questão
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
        '404':
          description: Empresa não encontrada
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Partner Company
      description: 'Adicionar um empregado à companhia parceira identificada pelo {id}'
      operationId: addEmployee
      parameters:
        - name: id
          in: path
          description: Identificador da empresa parceira
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Todos os necessários dados do empregado
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
      responses:
        '200':
          description: Empregado adicionado com sucesso
        '404':
          description: Empresa não encontrada
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /proposals:
    get:
      tags:
        - Event Proposal
      description: Obter todas as propostas de eventos do sistema
      operationId: getProposals
      parameters:
        - name: criteria
          in: query
          description: Filtrar as propostas de eventos que satisfazem o critério
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Lista com a informação sobre as propostas de eventos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Proposal'
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Event Proposal
      description: Adicionar uma proposta de evento ao sistema
      operationId: addProposal
      requestBody:
        description: Todos os necessários dados da proposta de evento
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Proposal'
      responses:
        '200':
          description: Proposta de evento adicionada com sucesso
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/proposals/{id}':
    get:
      tags:
        - Event Proposal
      description: 'Obter a proposta de evento identificado pelo {id}'
      operationId: getProposal
      parameters:
        - name: id
          in: path
          description: Identificador da proposta de evento a obter
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Informação da proposta de evento
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Proposal'
        '404':
          description: Proposta de evento não encontrada
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - Event Proposal
      description: 'Atualizar a proposta de evento identificada pelo {id}'
      operationId: updateProposal
      parameters:
        - name: id
          in: path
          description: Identificador da proposta de evento a remover
          required: true
          schema:
            type: integer
            format: int64
        - name: proposal
          in: query
          description: Objeto proposta de evento que é atualizado
          required: true
          schema:
            $ref: '#/components/schemas/Proposal'
      responses:
        '200':
          description: Proposta de evento atualizada
        '400':
          description: Id especificado inválido
        '404':
          description: Proposta de evento não encontrada
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - Event Proposal
      description: 'Remover do sistema a proposta de evento identificada pelo {id}'
      operationId: deleteProposal
      parameters:
        - name: id
          in: path
          description: Identificador da proposta de evento a remover
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Proposta de evento removida
        '404':
          description: Proposta de evento não encontrada
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/proposals/{id}/sections':
    get:
      tags:
        - Event Proposal
      description: 'Obter todos as secções da proposta de evento identificada pelo {id}'
      operationId: getSections
      parameters:
        - name: id
          in: path
          description: Identificador da proposta de evento
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Secções da proposta de evento
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Section'
        '404':
          description: Proposta de evento não encontrada
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Event Proposal
      description: 'Adicionar uma secção à proposta de evento identificada pelo {id}'
      operationId: addSection
      parameters:
        - name: id
          in: path
          description: Identificador da proposta de evento
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Todos os necessários dados da secção
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Section'
      responses:
        '200':
          description: Secção adicionada com sucesso
        '404':
          description: Proposta de evento não encontrada
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/proposals/{pid}/sections/{sid}':
    get:
      tags:
        - Event Proposal
      description: 'Obter a secção {sid} da proposta de evento identificada pelo {pid}'
      operationId: getSection
      parameters:
        - name: pid
          in: path
          description: Identificador da proposta
          required: true
          schema:
            type: integer
            format: int64
        - name: sid
          in: path
          description: Identificador da secção a obter
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Secções da proposta de evento
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Section'
        '404':
          description: Proposta de evento ou secção não encontradas
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - Event Proposal
      description: 'Atualizar a secção identificada pelo {sid} na proposta {pid}'
      operationId: updateSection
      parameters:
        - name: pid
          in: path
          description: Identificador da proposta
          required: true
          schema:
            type: integer
            format: int64
        - name: sid
          in: path
          description: Identificador da secção a atualizar
          required: true
          schema:
            type: integer
            format: int64
        - name: section
          in: query
          description: Objeto section que é atualizado
          required: true
          schema:
            $ref: '#/components/schemas/Section'
      responses:
        '200':
          description: Secção atualizada
        '400':
          description: Id especificado da proposta ou secção inválido
        '404':
          description: Proposta ou secção não encontrados
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - Event Proposal
      description: 'Remover do sistema a secção identificada pelo {sid} da proposta {pid}'
      operationId: deleteSection
      parameters:
        - name: pid
          in: path
          description: Identificador da proposta
          required: true
          schema:
            type: integer
            format: int64
        - name: sid
          in: path
          description: Identificador da secção a remover
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Secção removida
        '404':
          description: Proposta ou secção não encontrada
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/proposals/{id}/reviews':
    get:
      tags:
        - Event Proposal
      description: 'Obter todas as revisões da proposta de evento identificada pelo {id}'
      operationId: getReviews
      parameters:
        - name: id
          in: path
          description: Identificador da proposta de evento
          required: true
          schema:
            type: integer
            format: int64
        - name: criteria
          in: query
          description: Filtrar as revisões que satisfazem o critério
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Lista com as revisões da proposta de evento em questão
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review'
        '404':
          description: Proposta de evento não encontrada
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Event Proposal
      description: 'Adicionar uma revisão à proposta de evento identificada pelo {id}'
      operationId: addReview
      parameters:
        - name: id
          in: path
          description: Identificador da proposta de evento
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Todos os necessários dados da revisão
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
      responses:
        '200':
          description: Revisão adicionada com sucesso
        '404':
          description: Proposta de evento não encontrada
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/proposals/{pid}/reviews/{rid}':
    get:
      tags:
        - Event Proposal
      description: 'Obter a revisão identificada pelo {rid} da proposta {pid}'
      operationId: getReview
      parameters:
        - name: pid
          in: path
          description: Identificador da proposta
          required: true
          schema:
            type: integer
            format: int64
        - name: rid
          in: path
          description: Identificador da revisão a obter
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Informação da revisão
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
        '404':
          description: Proposta ou revisão não encontradas
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - Event Proposal
      description: 'Atualizar a revisão identificada pelo {rid} na empresa {pid}'
      operationId: updateReview
      parameters:
        - name: pid
          in: path
          description: Identificador da proposta
          required: true
          schema:
            type: integer
            format: int64
        - name: rid
          in: path
          description: Identificador da revisão a atualizar
          required: true
          schema:
            type: integer
            format: int64
        - name: review
          in: query
          description: Objeto review que é atualizado
          required: true
          schema:
            $ref: '#/components/schemas/Review'
      responses:
        '200':
          description: Revisão atualizada
        '400':
          description: Id especificado da proposta ou revisão inválidos
        '404':
          description: Proposta ou revisão não encontradas
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - Event Proposal
      description: 'Remover do sistema a revisão identificada pelo {rid} da proposta {pid}'
      operationId: deleteReview
      parameters:
        - name: pid
          in: path
          description: Identificador da proposta
          required: true
          schema:
            type: integer
            format: int64
        - name: rid
          in: path
          description: Identificador da revisão a remover
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Revisão removida
        '404':
          description: Porposta ou revisão não encontradas
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/proposals/{id}/staff':
    get:
      tags:
        - Event Proposal
      description: 'Obter todos os staff da proposta de evento identificada pelo {id}.'
      operationId: getStaff
      parameters:
        - name: id
          in: path
          description: Identificador da proposta de evento
          required: true
          schema:
            type: integer
            format: int64
        - name: criteria
          in: query
          description: Filtrar os staff que satisfazem o critério
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Staff da proposta de evento
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '404':
          description: Proposta de evento não encontrada
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Event Proposal
      description: 'Adicionar um utilizador ao staff da proposta de evento identificada pelo {id}.'
      operationId: addStaff
      parameters:
        - name: id
          in: path
          description: Identificador da proposta de evento
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Todos os necessários dados do comentário
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Utilizador adicionado com sucesso
        '404':
          description: Proposta de evento não encontrada
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/proposals/{pid}/staff/{uid}':
    get:
      tags:
        - Event Proposal
      description: 'Obter o utilizador identificado pelo {uid} na proposta {pid}'
      operationId: getStaff
      parameters:
        - name: pid
          in: path
          description: Identificador da proposta
          required: true
          schema:
            type: integer
            format: int64
        - name: uid
          in: path
          description: Identificador utilizador a obter
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Informação do utilizador
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Proposta ou utilizador não encontrados
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - Event Proposal
      description: 'Remover do staff da proposta {pid} o utilizador identificado pelo {uid}.'
      operationId: deleteStaff
      parameters:
        - name: pid
          in: path
          description: Identificador da proposta
          required: true
          schema:
            type: integer
            format: int64
        - name: uid
          in: path
          description: Identificador do utilizador a remover
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Utilizador removido do staff da proposta
        '404':
          description: Proposta ou utilizador não encontrados
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/proposals/{id}/members':
    get:
      tags:
        - Event Proposal
      description: 'Obter todos os membros da proposta de evento identificada pelo {id}.'
      operationId: getMembers
      parameters:
        - name: id
          in: path
          description: Identificador da proposta de evento
          required: true
          schema:
            type: integer
            format: int64
        - name: criteria
          in: query
          description: Filtrar os membros que satisfazem o critério
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Membros da proposta de evento
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '404':
          description: Proposta de evento não encontrada
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Event Proposal
      description: 'Adicionar um utilizador ao membros da proposta de evento identificada pelo {id}.'
      operationId: addMember
      parameters:
        - name: id
          in: path
          description: Identificador da proposta de evento
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Todos os necessários dados do utilizador
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Utilizador adicionado com sucesso
        '404':
          description: Proposta de evento não encontrada
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/proposals/{pid}/members/{mid}':
    get:
      tags:
        - Event Proposal
      description: 'Obter o utilizador identificado pelo {mid} na proposta {pid}'
      operationId: getMember
      parameters:
        - name: pid
          in: path
          description: Identificador da proposta
          required: true
          schema:
            type: integer
            format: int64
        - name: mid
          in: path
          description: Identificador utilizador a obter
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Informação do utilizador
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Proposta ou utilizador não encontrados
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - Event Proposal
      description: 'Remover dos membros da proposta {pid} o utilizador identificado pelo {mid}.'
      operationId: deleteMember
      parameters:
        - name: pid
          in: path
          description: Identificador da proposta
          required: true
          schema:
            type: integer
            format: int64
        - name: mid
          in: path
          description: Identificador do utilizador a remover
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Utilizador removido dos membros da proposta
        '404':
          description: Proposta ou utilizador não encontrados
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/proposals/{id}/comments':
    get:
      tags:
        - Event Proposal
      description: 'Obter todos os comentários da proposta de evento identificada pelo {id}'
      operationId: getComments
      parameters:
        - name: id
          in: path
          description: Identificador da proposta de evento
          required: true
          schema:
            type: integer
            format: int64
        - name: criteria
          in: query
          description: Filtrar os comentários que satisfazem o critério
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Lista com os comentários da proposta de evento em questão
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
        '404':
          description: Proposta de evento não encontrada
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Event Proposal
      description: 'Adicionar um comentário à proposta de evento identificada pelo {id}'
      operationId: addComment
      parameters:
        - name: id
          in: path
          description: Identificador da proposta de evento
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Todos os necessários dados do comentário
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
      responses:
        '200':
          description: Comentário adicionado com sucesso
        '404':
          description: Proposta de evento não encontrada
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/proposals/{pid}/comments/{cid}':
    get:
      tags:
        - Event Proposal
      description: 'Obter o comentário identificado pelo {cid} na proposta {pid}'
      operationId: getComment
      parameters:
        - name: pid
          in: path
          description: Identificador da proposta
          required: true
          schema:
            type: integer
            format: int64
        - name: cid
          in: path
          description: Identificador do comentário a obter
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Informação do comentário
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        '404':
          description: Proposta ou comentário não encontrados
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - Event Proposal
      description: 'Atualizar o comentário identificado pelo {cid} na proposta {pid}'
      operationId: updateComment
      parameters:
        - name: pid
          in: path
          description: Identificador da proposta
          required: true
          schema:
            type: integer
            format: int64
        - name: cid
          in: path
          description: Identificador do comentário a atualizar
          required: true
          schema:
            type: integer
            format: int64
        - name: comment
          in: query
          description: Objeto comentário que é atualizado
          required: true
          schema:
            $ref: '#/components/schemas/Comment'
      responses:
        '200':
          description: Comentário atualizado
        '400':
          description: Id especificado da proposta ou comentário inválido
        '404':
          description: Proposta ou comentário não encontrados
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - Event Proposal
      description: 'Remover do sistema o comentário identificado pelo {cid} na proposta {id}'
      operationId: deleteComment
      parameters:
        - name: pid
          in: path
          description: Identificador da proposta
          required: true
          schema:
            type: integer
            format: int64
        - name: cid
          in: path
          description: Identificador do comentário a remover
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Comentário removido
        '404':
          description: Proposta ou comentário não encontrados
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/proposals/{id}/biddings':
    get:
      tags:
        - Event Proposal
      description: >-
        Obter os Ids dos utilizadores interessados em fazer review à proposta
        {id}.
      operationId: getReviewBiddings
      parameters:
        - name: id
          in: path
          description: Identificador da proposta
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Utilizadores interessados em fazer review à proposta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Proposta não encontrada
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Event Proposal
      description: >-
        Adiciona um utilizador à lista de utilizadores interessados
        em fazer review à proposta {id}.
      operationId: addReviewBidding
      parameters:
        - name: id
          in: path
          description: Identificador da proposta
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Utilizador adicionado
        '400':
          description: Id especificado da proposta inválido
        '404':
          description: Proposta não encontrada
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/proposals/{pid}/biddings/{uid}':
    get:
      tags:
        - Event Proposal
      description: >-
        Obter o utilizadores {uid} interessado em fazer review à proposta
        {pid}.
      operationId: getReviewBidding
      parameters:
        - name: pid
          in: path
          description: Identificador da proposta
          required: true
          schema:
            type: integer
            format: int64
        - name: uid
          in: path
          description: Identificador do utilizador
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Utilizadores interessados em fazer review à proposta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Proposta não encontrada
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - Event Proposal
      description: >-
        Remover o utilizador {uid} da lista de utilizadores interessados
        em fazer review à proposta {pid}
      operationId: deleteReviewBidding
      parameters:
        - name: pid
          in: path
          description: Identificador da proposta
          required: true
          schema:
            type: integer
            format: int64
        - name: uid
          in: path
          description: Identificador do utilizador a remover da lista
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Utilizador removido
        '404':
          description: Proposta ou utilizador não encontrados
        default:
          description: Erro não esperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    User:
      required:
        - firstName
        - lastName
        - userName
        - email
        - password
        - role
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        firstName:
          type: string
          example: john
        lastName:
          type: string
          example: smith
        userName:
          type: string
          example: user1
        email:
          type: string
          example: user1@ecma.com
        password:
          type: string
          example: $2y$12$95z6mYtPI371qXLCTWzP0elvLNv7Znh8dlwoseWncIm2zQb4u94xS
          writeOnly: true
        role:
          type: "string"
          enum:
          - "SYS_ADMIN"
          - "COMPANY_ADMIN"
          - "PROPOSAL_APPROVER"
        proposals:
          type: array
          items:
            $ref: '#/components/schemas/Proposal'
          writeOnly: true
        biddings:
          type: array
          items:
            $ref: '#/components/schemas/Proposal'
          writeOnly: true
    Company:
      required:
        - name
        - city
        - zipCode
        - address
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        name:
          type: string
          example: ECMA
        city:
          type: string
          example: Lisbon
        zipCode:
          type: string
          example: 1000-261
        address:
          type: string
          example: Long Street
        phone:
          type: integer
          format: int64
          example: 212121212
        email:
          type: string
          example: info@ecma.com
        fax:
          type: string
          example: 211212121
        employees:
          type: array
          items:
            $ref: '#/components/schemas/Employee'
          writeOnly: true
    Employee:
      required:
        - city
        - zipCode
        - address
        - cellPhone
        - homePhone
        - gender
        - salary
        - birthday
        - job
        - company
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        city:
          type: string
          example: Lisbon
        zipCode:
          type: string
          example: 1000-260
        address:
          type: string
          example: Short Street
        cellPhone:
          type: integer
          format: int64
          example: 919191919
        homePhone:
          type: integer
          format: int64
          example: 211111111
        gender:
          type: string
          enum:
            - M
            - F
        salary:
          type: integer
          format: int64
          example: 5000
          minimum: 0
        birthday:
          type: string
          example: '2018-01-01'
          format: date
        job:
          type: string
          example: CEO
        company:
          $ref: "#/components/schemas/Company"
    Proposal:
      required:
        - title
        - description
        - state
        - creationDate
        - proposer
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        title:
          type: string
        description:
          type: string
        state:
          type: string
          enum:
            - PENDING_APPROVAL
            - APPROVED
            - REJECTED
        creationDate:
          type: string
          format: date
          readOnly: true
        sections:
          type: array
          items:
            $ref: '#/components/schemas/Section'
          writeOnly: true
        reviewers:
          type: array
          items:
            $ref: '#/components/schemas/User'
          writeOnly: true
        staff:
          type: array
          items:
            $ref: '#/components/schemas/User'
          writeOnly: true
        members:
          type: array
          items:
            $ref: '#/components/schemas/Employee'
          writeOnly: true
        reviews:
          type: array
          items:
            $ref: '#/components/schemas/Review'
          writeOnly: true
        comments:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
          writeOnly: true
        reviewBiddings:
          type: array
          items:
            $ref: '#/components/schemas/User'
          writeOnly: true
        proposer:
          $ref: "#/components/schemas/User"
    Section:
      required:
        - title
        - description
        - goals
        - material
        - budget
        - workPlan
        - proposal
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        title:
          type: string
          example: Section nr1
        description:
          type: string
          example: Section for a new perfume promotion event
        goals:
          type: string
          example: Boost sales by getting costumers to buy the product
        material:
          type: string
          example: Perfume samples
        budget:
          type: number
          format: float
          example: 5000
        workPlan:
          type: string
          example: >-
            Go to a place and promote the new perfume by allowing interested
            people to try it
        proposal:
          $ref: "#/components/schemas/Proposal"
    Review:
      required:
        - title
        - text
        - classification
        - creationDate
        - author
        - proposal
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        title:
          type: string
          example: Worst proposition ever
        text:
          type: string
          example: >-
            After analysing this proposition I came to the conclusion that this
            is not a very well-thought-out proposition because it lacks this and
            that
        summary:
          type: string
          example: A very bad proposition
        classification:
          type: integer
          format: int32
          minimum: 0
          maximum: 10
          example: 0
        creationDate:
          type: string
          format: date
          example: '2018-10-10'
        author:
          $ref: "#/components/schemas/User"
        proposal:
          $ref: "#/components/schemas/Proposal"
    Comment:
      required:
        - title
        - text
        - creationDate
        - author
        - proposal
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        title:
          type: string
          example: Workplan question
        text:
          type: string
          example: >-
            Hello, can someone involved give a bit more detail about the
            workplan?
        creationDate:
          type: string
          format: date
          example: '2018-10-15'
        author:
          $ref: "#/components/schemas/User"
        proposal:
          $ref: "#/components/schemas/Proposal"
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
